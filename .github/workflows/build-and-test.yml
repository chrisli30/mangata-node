name: Build and test

on:
  workflow_call:
    inputs:
      version:
        description: "Version to be assigned to the built image"
        required: true
        type: string

env:
  DOCKER_BUILDER_IMAGE: mangatasolutions/node-builder:0.2
  DISABLE_TTY: 1

permissions:
  contents: write
  id-token: write

jobs:
  build-node-image:
    runs-on: [self-hosted, compile]
    container:
      image: mangatasolutions/node-builder:multi
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - name: Cache the Cargo dependencies
        uses: mansagroup/gcs-cache-action@v1.0.3
        with:
          bucket: mangata-node-ci-cache
          path: |
            ${{ github.workspace }}/target
            /usr/local/cargo/git
            /usr/local/cargo/registry
          key: node-compile-cache-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
      
      - name: Compile mangata-node code
        run: cargo build --release --no-default-features --features=mangata-rococo,mangata-kusama
      
      - name: Build and push Docker image
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -f devops/dockerfiles/node/Dockerfile \
          --build-arg NODE_BINARY=target/release/mangata-node \
          --build-arg WASM=target/release/wbuild/mangata-rococo-runtime/mangata_rococo_runtime.compact.compressed.wasm \
          -t mangatasolutions/mangata-node:${{ inputs.version }} .
          docker push mangatasolutions/mangata-node:${{ inputs.version }}
      
      - uses: actions/upload-artifact@v3
        with:
          name: binary-and-wasms
          path: |
            target/release/mangata-node
            target/release/wbuild/mangata-rococo-runtime/mangata_rococo_runtime.compact.compressed.wasm
            target/release/wbuild/mangata-kusama-runtime/mangata_kusama_runtime.compact.compressed.wasm
      
      - name: Fix permissions on self-hosted runner
        if: always()
        run: chown -R 1003:1004 $GITHUB_WORKSPACE

  # rustfmt-check:
  #   name: Formatting check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Check formatting
  #       run: |
  #         docker pull ${{ env.DOCKER_BUILDER_IMAGE }}
  #         ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch
  #         ./docker-cargo.sh fmt --all -- --check

  # clippy-check:
  #   name: Clippy check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run clippy
  #       run: |
  #         docker pull ${{ env.DOCKER_BUILDER_IMAGE }}
  #         ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch
  #         ./docker-cargo.sh clippy -p pallet-xyk

  # unit-test:
  #   name: Unit tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run unit tests
  #       run: |
  #         docker pull ${{ env.DOCKER_BUILDER_IMAGE }}
  #         ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch
  #         ./docker-cargo.sh test -j2 -p pallet-bootstrap -p xyk-rpc -p pallet-xyk -p xyk-runtime-api -p pallet-issuance -p pallet-multipurpose-liquidity -p pallet-sudo-origin

  # run-benchmarks-tests:
  #   name: Run benchmark tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run benchamrks
  #       run: |
  #         docker pull ${{ env.DOCKER_BUILDER_IMAGE }}
  #         ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch || ./docker-cargo.sh fetch
  #         ./docker-cargo.sh test -j2 --features=runtime-benchmarks -p pallet-bootstrap -p pallet-xyk -p xyk-runtime-api -p pallet-issuance

  # build-and-run-try-runtime:
  #   runs-on: [self-hosted, compile]
  #   container:
  #     # The same image as used in `devops/dockerfiles/node-new/Dockerfile`
  #     image: paritytech/ci-linux@sha256:535c8a792a618f549832fa57e52c346d352021fa050ec82b30073810eb15369e
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Cache the Cargo dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: /usr/local/cargo
  #         key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

  #     - name: Build node using try runtime feature rococo
  #       run: cargo build --release --features=try-runtime,mangata-rococo

  #     - name: Run try-runtime Rococo testnet
  #       run: cargo run --release --features=try-runtime,mangata-rococo try-runtime --chain=public-testnet --execution=Native on-runtime-upgrade live --uri wss://roccoco-testnet-collator-01.mangatafinance.cloud:443

  #     - name: Run try-runtime Kusama Mainnet
  #       run: cargo run --release --features=try-runtime try-runtime --chain=kusama-mainnet --execution=Native on-runtime-upgrade live --uri wss://prod-kusama-collator-01.mangatafinance.cloud:443
      
  #     - name: Fix permissions on self-hosted runner
  #       if: always()
  #       run: chown -R 1003:1004 $GITHUB_WORKSPACE

  # run-benchmarks:
  #   name: Run runtime benchmarks
  #   needs: [build-node-image]
  #   runs-on: ubuntu-latest
  #   env:
  #     NODE_IMAGE: "mangatasolutions/mangata-node:rococo-${{ inputs.version }}"
  #   steps:
  #     - name: Run Runtime Benchmark
  #       run: |
  #         docker pull ${{ env.NODE_IMAGE }}
  #         docker run --rm ${{ env.NODE_IMAGE }} benchmark pallet --chain kusama-mainnet --execution wasm --wasm-execution compiled --extrinsic '*' --pallet 'pallet-xyk' --template ./templates/module-weight-template.hbs
